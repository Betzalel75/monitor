import { DashboardBox, UsageBar } from "dashboard_box.slint";
import { ProcessData, InterfaceInfo, RxInfo, TxInfo } from "data_types.slint";
import { VerticalBox, GroupBox, TabWidget, StandardTableView, ScrollView } from "std-widgets.slint";
import {DashboardSkin} from "dashboard_theme.slint";

// Status Card Component
component StatusCard inherits Rectangle {
    in property <string> title;
    in property <string> value;
    in property <brush> indicator-color: DashboardSkin.palette.highlight;

    height: 80px;
    background: DashboardSkin.palette.box;
    border-radius: 8px;
    drop-shadow-offset-x: 2px;
    drop-shadow-offset-y: 2px;
    drop-shadow-blur: 6px;
    drop-shadow-color: DashboardSkin.palette.shadow;

    Rectangle {
        width: 4px;
        height: 60%;
        background: root.indicator-color;
        border-radius: 2px;
        x: 0px;
        y: parent.height / 2 - self.height / 2;
    }

    VerticalLayout {
        padding-left: 16px;
        padding-right: 16px;
        spacing: 4px;
        alignment: center;

        Text {
            text: root.title;
            font-size: DashboardSkin.SmallFont;
            color: DashboardSkin.palette.text;
        }

        Text {
            text: root.value;
            font-size: DashboardSkin.LargeFont;
            font-weight: 700;
            color: DashboardSkin.palette.highlight;
        }
    }
}

// System Info Component
export component SystemInfoMonitor inherits DashboardBox {
    in property <string> os-type;
    in property <string> user;
    in property <string> hostname;
    in property <string> cpu-model;
    in property <int> total-tasks;

    title: "System Information";
    height: 350px;

    GridLayout {
        spacing: 12px;
        Row {
            StatusCard {
                title: "OS Type";
                value: os-type;
                indicator-color: #FF5C00;
            }

            StatusCard {
                title: "User";
                value: user;
                indicator-color: #6776FF;
            }
        }

        Row {
            StatusCard {
                title: "Hostname";
                value: hostname;
                indicator-color: #00C853;
            }

            StatusCard {
                title: "CPU";
                value: cpu-model;
                indicator-color: #FF3D00;
            }
        }

        Row {
            StatusCard {
                title: "Total Tasks";
                value: total-tasks;
                indicator-color: #FFAB00;
                colspan: 2;
            }
        }
    }
}

// Memory Usage Component
export component MemoryMonitor inherits DashboardBox {
    in property <string> ram-usage;
    in property <string> swap-usage;
    in property <string> disk-usage;
    // --------------------------- //
    in property <int> ram-usagel;
    in property <int> swap-usagel;
    in property <int> disk-usagel;

    title: "Memory Usage";
    height: 350px;

    VerticalLayout {
        spacing: 20px;

        // RAM Usage
        VerticalLayout {
            spacing: 8px;

            Text {
                text: "RAM";
                font-size: DashboardSkin.MediumFont;
                font-weight: 600;
            }

            HorizontalLayout {
                spacing: 10px;

                Rectangle {
                    width: 45px;
                    height: 45px;

                    Image {
                        source: @image-url("images/ram.svg");
                        width: parent.width;
                        height: parent.height;
                        colorize: DashboardSkin.palette.highlight;
                    }
                }

                VerticalLayout {
                    alignment: center;
                    spacing: 2px;

                    Text {
                        text: ram-usage;
                        font-size: DashboardSkin.LargeFont;
                        font-weight: 700;
                        color: DashboardSkin.palette.highlight;
                    }

                    Rectangle {
                        height: 8px;
                        background: #E0E0E0;
                        border-radius: 4px;
                        Rectangle {
                            height: parent.height;
                            width: (parent.width * min(root.ram-usagel / 100, 1));
                            background: @linear-gradient(90deg, #6776FF, #6100FF);
                            x: 0px;
                            border-radius: 4px;
                        }
                        // Animation fluide
                        animate width {
                            duration: 300ms;
                            easing: ease;
                        }
                    }
                }
            }
        }

        // Swap Usage
        VerticalLayout {
            spacing: 8px;

            Text {
                text: "Swap";
                font-size: DashboardSkin.MediumFont;
                font-weight: 600;
            }

            HorizontalLayout {
                spacing: 10px;

                Rectangle {
                    width: 45px;
                    height: 45px;

                    Image {
                        source: @image-url("images/swap.svg");
                        width: parent.width;
                        height: parent.height;
                        colorize: #FF5C00;
                    }
                }

                VerticalLayout {
                    alignment: center;
                    spacing: 2px;

                    Text {
                        text: swap-usage;
                        font-size: DashboardSkin.LargeFont;
                        font-weight: 700;
                        color: #FF5C00;
                    }

                    Rectangle {
                        height: 8px;
                        background: #E0E0E0;
                        border-radius: 4px;

                        Rectangle {
                            height: parent.height;
                            width: (parent.width * min(root.swap-usagel / 100, 1)); // TODO: Calculate from swap-usage
                            background: @linear-gradient(90deg, #FF5C00, #FF3122);
                            border-radius: 4px;
                            x: 0px;
                        }
                        // Animation fluide
                        animate width {
                            duration: 300ms;
                            easing: ease;
                        }
                    }
                }
            }
        }

        // Disck Usage
        VerticalLayout {
            spacing: 8px;

            Text {
                text: "Disk";
                font-size: DashboardSkin.MediumFont;
                font-weight: 600;
            }

            HorizontalLayout {
                spacing: 10px;

                Rectangle {
                    width: 45px;
                    height: 45px;

                    Image {
                        source: @image-url("images/disk.svg");
                        width: parent.width;
                        height: parent.height;
                        colorize: #67ff79;
                    }
                }

                VerticalLayout {
                    alignment: center;
                    spacing: 2px;

                    Text {
                        text: disk-usage;
                        font-size: DashboardSkin.LargeFont;
                        font-weight: 700;
                        color: #67ff79;
                    }

                    Rectangle {
                        height: 8px;
                        background: #E0E0E0;
                        border-radius: 4px;
                        Rectangle {
                            height: parent.height;
                            width: (parent.width * min(root.disk-usagel / 100, 1));
                            background: @linear-gradient(90deg, #67ff79, #14ba12);
                            x: 0px;
                            border-radius: 4px;
                        }
                        // Animation fluide
                        animate width {
                            duration: 300ms;
                            easing: ease;
                        }
                    }
                }
            }
        }
    }
}

export component TasksMonitor inherits DashboardBox {
    in property <[ProcessData]> processes;
    in property <length> horizontalSpace;
    in property <string> search-query;
    out property <string> current-query <=> input.text;
    property <string> selected-pid: "";
    property <string> selected-pida: "";
    property <string> selected-pidb: "";
       
    // Callback pour notifier des changements
    callback search-changed(string);
    title: "Processes";
    VerticalLayout {
        spacing: 10px;
        
        // Champ de recherche
        Rectangle {
            height: 40px;
            background: DashboardSkin.palette.box;
            border-radius: 4px;
            border-width: 1px;
            border-color: DashboardSkin.palette.tableHeader;
            HorizontalLayout {
                padding-left: 10px;
                padding-right: 10px;
                spacing: 10px;
                alignment: start;
                Text {
                    text: "🔍";
                    font-size: DashboardSkin.MediumFont;
                    vertical-alignment: center;
                }
                
                // Champ de texte pour la recherche
                input := TextInput {
                    font-size: DashboardSkin.SmallFont;
                    horizontal-alignment: left;
                    vertical-alignment: center;
                    // Déclencher la recherche quand le texte change
                    edited => {
                        root.search-changed(self.text);
                    }
                }
                
                // Bouton pour effacer le texte
                if (current-query != ""): Rectangle {
                    width: 20px;
                    height: 20px;
                    border-radius: 10px;
                    background: DashboardSkin.palette.tableHeader;
                    Text {
                        text: "×";
                        color: DashboardSkin.palette.text;
                        font-size: DashboardSkin.MediumFont;
                        horizontal-alignment: center;
                        vertical-alignment: center;
                    }

                    TouchArea {
                        clicked => {
                            input.text = "";
                            root.search-changed("");
                        }
                    }
                }
            }
        }
        
        // Header
        Rectangle {
            height: 40px;
            background: DashboardSkin.palette.tableHeader;
            border-radius: 4px;
            HorizontalLayout {
                padding: 10px;
                padding-left: 20px;
                spacing: horizontalSpace;
                for header[idx] in ["PID", "Name", "State", "CPU %", "Memory %"]: Text {
                    text: header;
                    horizontal-alignment: idx == 0 ? left : center;
                    font-size: DashboardSkin.MediumFont;
                    font-weight: 700;
                    color: DashboardSkin.palette.text;
                    width: header == "Name" ? 100px : 100px;
                }
            }
        }
        
        // Message "Aucun résultat" si nécessaire
        if (processes.length == 0 && current-query != ""): Rectangle {
            height: 200px;
            background: transparent;
            VerticalLayout {
                alignment: center;
                spacing: 10px;
                Text {
                    Image {
                        source: @image-url("images/no-results.svg");
                        width: 50px;
                        height: 50px;
                    }

                    font-size: 32px;
                    horizontal-alignment: center;
                }

                Text {
                    text: "No matching processes found";
                    color: DashboardSkin.palette.text.with-alpha(0.5);
                    font-size: DashboardSkin.MediumFont;
                    horizontal-alignment: center;
                }
            }
        }
        
        // Liste des processus
        ScrollView {
            height: 640px;
            VerticalLayout {
                spacing: 2px;
                for process[idx] in processes: Rectangle {
                    height: 36px;
                    border-radius: 0;
                    // Détermine la couleur de fond en fonction de la sélection
                    background: ta.has-hover ? DashboardSkin.palette.tableHeader.brighter(10%) : process.pid == root.selected-pid || process.pid == root.selected-pida || process.pid == root.selected-pidb ? DashboardSkin.palette.highlight.with-alpha(0.2) : idx.mod(2) == 0 ? DashboardSkin.palette.box : DashboardSkin.palette.box.brighter(3%);

                    ta := TouchArea {
                        clicked => {
                            // Désélection si déjà sélectionné
                            if (root.selected-pid == process.pid) {
                                root.selected-pid = "";
                            } else if (root.selected-pida == process.pid) {
                                root.selected-pida = "";
                            } else if (root.selected-pidb == process.pid) {
                                root.selected-pidb = "";
                            } else {
                                // Ajouter à la première case vide
                                if (root.selected-pid == "") {
                                    root.selected-pid = process.pid;
                                } else if (root.selected-pida == "") {
                                    root.selected-pida = process.pid;
                                } else if (root.selected-pidb == "") {
                                    root.selected-pidb = process.pid;
                                } else {
                                    // Sinon, faire un remplacement FIFO simple
                                    root.selected-pid = root.selected-pida;
                                    root.selected-pida = root.selected-pidb;
                                    root.selected-pidb = process.pid;
                                }
                            }
                        }
                    }

                    HorizontalLayout {
                        padding: 8px;
                        padding-left: 20px;
                        spacing: horizontalSpace;
                        Text {
                            text: process.pid;
                            horizontal-alignment: left;
                            width: 100px;
                            font-size: DashboardSkin.MediumFont;
                            color: DashboardSkin.palette.text;
                        }

                        Text {
                            text: process.name;
                            horizontal-alignment: left;
                            width: 100px;
                            font-size: DashboardSkin.MediumFont;
                            color: DashboardSkin.palette.text;
                        }

                        Text {
                            text: process.state;
                            horizontal-alignment: center;
                            width: 100px;
                            font-size: DashboardSkin.MediumFont;
                            color: DashboardSkin.palette.text;
                        }

                        Text {
                            text: process.cpu;
                            horizontal-alignment: center;
                            width: 100px;
                            font-size: DashboardSkin.MediumFont;
                        }

                        Text {
                            text: process.memory;
                            horizontal-alignment: center;
                            width: 100px;
                            font-size: DashboardSkin.MediumFont;
                        }
                    }
                }
            }
        }
        
        // Compteur de résultats si une recherche est active
        if (current-query != ""): Rectangle {
            height: 30px;
            background: transparent;
            Text {
                text: "Showing " + processes.length + " matching processes";
                color: DashboardSkin.palette.text.with-alpha(0.7);
                font-size: DashboardSkin.SmallFont;
                horizontal-alignment: right;
            }
        }
    }
}

// Network Monitor Component
export component NetworkMonitor inherits DashboardBox {
    in property <[InterfaceInfo]> interface-list;
    in property <[RxInfo]> rx-info;
    in property <[TxInfo]> tx-info;

    pure function format_bytes(bytes: float) -> string {
        if (bytes < 1024) {
            return int(bytes) + "bytes/2Go";
        } else if bytes < 1024 * 1024 {
            return int(bytes / 1024) + "KB/2Go";
        } else if bytes < 1024 * 1024 * 1024 {
            return int(bytes / (1024 * 1024)) + "MB/2Go";
        } else {
            return int(bytes / (1024 * 1024 * 1024)) + "GB/2Go";
        }
    }

    pure function int(f: float) -> int {
        return f.round();
    }

    pure function data-usage(bytes: float) -> float {
        return (bytes / 2000000000) * 100;
    }

    title: "Network";
    ScrollView {
        height: 90%;
        TabWidget {
            Tab {
                title: "Interfaces";
                ScrollView {
                    Rectangle {
                        VerticalLayout {
                            spacing: 12px;

                            for interface in interface-list: Rectangle {
                                height: 64px;
                                background: DashboardSkin.palette.tableHeader;
                                border-radius: 6px;

                                VerticalLayout {
                                    padding: 10px;
                                    spacing: 4px;

                                    Text {
                                        text: interface.name;
                                        font-size: DashboardSkin.MediumFont;
                                        font-weight: 600;
                                    }

                                    Text {
                                        text: "IP: " + interface.ip;
                                        font-size: DashboardSkin.SmallFont;
                                    }
                                }
                            }
                        }
                    }
                }
            }

            Tab {
                title: "Network Statistics";

                TabWidget {
                    Tab {
                        title: "RX";

                        ScrollView {
                            VerticalLayout {
                                spacing: 12px;

                            // Header
                            Rectangle {
                                    height: 36px;
                                    background: DashboardSkin.palette.tableHeader;
                                    border-radius: 4px;

                                    HorizontalLayout {
                                        padding: 10px;

                                        for header in [
                                            "Interface",
                                            "Bytes",
                                            "Packets",
                                            "Errors",
                                            "Drops",
                                            "FIFO",
                                            "Frame",
                                            "Compressed",
                                            "Multicast"
                                        ]: Text {
                                            text: header;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            font-weight: 700;
                                            width: 120px;
                                        }
                                    }
                                }

                            // RX Data
                            for data in rx-info: Rectangle {
                                    height: 36px;

                                    HorizontalLayout {
                                        padding: 10px;

                                        Text {
                                            text: data.name;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            width: 120px;
                                        }

                                        Text {
                                            text: data.rx-bytes;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            width: 120px;
                                        }

                                        Text {
                                            text: data.rx-packets;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            width: 120px;
                                        }

                                        Text {
                                            text: data.rx-errors;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            width: 120px;
                                        }

                                        Text {
                                            text: data.rx-drops;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            width: 120px;
                                        }

                                        Text {
                                            text: data.rx-fifo;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            width: 120px;
                                        }

                                        Text {
                                            text: data.rx-frame;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            width: 120px;
                                        }

                                        Text {
                                            text: data.rx-compressed;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            width: 120px;
                                        }

                                        Text {
                                            text: data.rx-multicast;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            width: 120px;
                                        }
                                    }
                                }
                                // Visuel Graphique sur le trafique réseau
                                for data in rx-info: UsageBar {
                                    usage: format_bytes(data.rx-bytes);
                                    data-usage: data-usage(data.rx-bytes);
                                    name: data.name;
                                }
                            }
                        }
                    }

                    Tab {
                        title: "TX";

                        ScrollView {
                            VerticalLayout {
                                spacing: 12px;

                            // Header
                            Rectangle {
                                    height: 36px;
                                    background: DashboardSkin.palette.tableHeader;
                                    border-radius: 4px;

                                    HorizontalLayout {
                                        padding: 10px;

                                        for header in [
                                            "Interface",
                                            "Bytes",
                                            "Packets",
                                            "Errors",
                                            "Drops",
                                            "FIFO",
                                            "Colls",
                                            "Carrier",
                                            "Compressed"
                                        ]: Text {
                                            text: header;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            font-weight: 700;
                                            width: 120px;
                                        }
                                    }
                                }

                            // TX Data
                            for data in tx-info: Rectangle {
                                    height: 36px;

                                    HorizontalLayout {
                                        padding: 10px;

                                        Text {
                                            text: data.name;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            width: 120px;
                                        }

                                        Text {
                                            text: data.tx-bytes;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            width: 120px;
                                        }

                                        Text {
                                            text: data.tx-packets;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            width: 120px;
                                        }

                                        Text {
                                            text: data.tx-errors;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            width: 120px;
                                        }

                                        Text {
                                            text: data.tx-drops;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            width: 120px;
                                        }

                                        Text {
                                            text: data.tx-fifo;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            width: 120px;
                                        }

                                        Text {
                                            text: data.tx-colls;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            width: 120px;
                                        }

                                        Text {
                                            text: data.tx-carrier;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            width: 120px;
                                        }

                                        Text {
                                            text: data.tx-compressed;
                                            horizontal-alignment: center;
                                            font-size: DashboardSkin.SmallFont;
                                            width: 120px;
                                        }
                                    }
                                }
                                // Visuel Graphique sur le trafique réseau
                                for data in tx-info: UsageBar {
                                    usage: format_bytes(data.tx-bytes);
                                    data-usage: data-usage(data.tx-bytes);
                                    name: data.name;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
